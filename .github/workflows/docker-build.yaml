name: Docker Build
on:
  workflow_call:
    inputs:
      env:
        required: false
        type: string
        default: "dev"

      working-directory:
        required: false
        type: string
        default: "."

      ghcr-enable:
        description: Push image to Github Container Registry
        required: false
        default: true
        type: boolean

      context:
        description: Docker context (path) to start build from
        # To set to a subdir, use format of "{{defaultContext}}:mysubdir"
        required: false
        type: string

      file:
        description: Dockerfile to use
        required: false
        default: Dockerfile
        type: string

      flavor-rules:
        description: Three rules to (optionally) set for tag-rules, latest, prefix, and suffix
        required: false
        type: string
        default: |
          latest=false

      tag-rules:
        description: Use docker-metadata action to create tags from a key-value pair list in CSV format
        required: false
        type: string
        default: |
          # type=raw,value=stable-{{date 'YYYYMMDD'}}-{{sha}},enable={{is_default_branch}},priority=300
          # type=ref,event=tag,priority=200
          # type=raw,value=latest,enable={{is_default_branch}},priority=100
          # type=raw,value=gha-${{ github.run_id }},enable=${{github.event_name == 'pull_request'}},priority=200
          # type=ref,event=pr,priority=100
          type=sha, format=long

      image-names:
        description: A list of the image names(account/repo) to build and push
        required: false
        type: string
        default:
          # ghcr.io/${{ github.repository }}
          zhichenwang1103/docker-demo

      platforms:
        description: A list of platforms to build for
        required: false
        type: string
        # common ones: linux/amd64,linux/arm64,linux/arm/v7
        default: |
          linux/amd64

      push:
        description: Push Image to registry
        required: false
        default: true
        type: boolean

    outputs:
      ghcr-tag:
        description: the tag of the image pushed to GHCR
        value: ${{ jobs.build-image.outputs.ghcr-tag }}

permissions:
  contents: read
  packages: write

jobs:
  docker-build:
    name: build and test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ inputs.working-directory }}
    environment: ${{ inputs.env || 'dev' }}

    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v3

      - name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@v2
        # BuildKit (used with `docker buildx`) is the best way to build images
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        if: inputs.ghcr-enable == true
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

#        # tmate session for debugging
#      - name: Setup tmate session for debugging
#        uses: mxschmitt/action-tmate@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ inputs.image-names }}
          tags: ${{ inputs.tag-rules }}
          # flavor-rules: ${{ inputs.flavor-rules }}

      - name: Build and push
        id: build_image
        uses: docker/build-push-action@v4
        with:
          context: ${{ inputs.context }}
          # file: ${{ inputs.file }}
          platforms: ${{ inputs.platforms }}
          push: ${{ inputs.push }}
          tags: ${{ steps.meta.outputs.tags }}
          target: ${{ inputs.target }}
          builder: ${{ steps.buildx.outputs.name }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          labels: ${{ steps.meta.outputs.labels }}
          # provenance: ${{ steps.meta.outputs.provenance }}
          provenance: true
          sbom: true

      - name: Repository Dispatch
        uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ secrets.GH_TOKEN }}
          repository: chris201222/platform-config
          event-type: update-image-tag
          client-payload: |- 
            {
              "ref": "${{ github.ref }}", 
              "github_base_ref": "${{ github.base_ref }}",
              "sha": "sha-${{ github.sha }}", 
              "imageName": "${{ inputs.working-directory }}", 
              "imageTag": "sha-${{ github.sha }}", 
              "event_name": "${{github.event_name}}",
              "commitMessage": "${{ github.event.head_commit.message }}",
              "lastCommitBy": "${{ github.actor }}"
            }
